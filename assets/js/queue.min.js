$(document).ready(function(){"use strict";class e{constructor(){this.buttons={st:$(".start-queue"),nx:$(".next-queue"),fn:$(".finish-queue")},this.submission={add:e=>{let t=!1;return $.ajax({url:`${U}/service/add`,type:"post",dataType:"json",async:!1,data:e,success:function(e){t=e}}),t},delete:e=>{let t=!1;return $.ajax({url:`${U}/service/delete`,type:"post",dataType:"json",async:!1,data:{id:e},success:function(e){t=e}}),t},update:()=>{},call:e=>{let t=!1;return $.ajax({type:"post",url:`${U}/service/call`,dataType:"json",async:!1,data:{id:e},success:function(e){t=e}}),t},finish:e=>{return $.ajax({type:"post",url:`${U}/service/finish`,async:!1,dataType:"json",data:{id:e},success:function(e){console.log(e)}}),!1}}}init(){this.get()&&(this.constructState(),this.render())}constructState(){const e=State.Queue;e.total=e.queues.length,e.current=0;for(let t=0;t<e.dest.length;t++)e.dest[t].current=0,e.dest[t].total=0;for(let t=0;t<e.total;t++){const a=e.dest.findIndex(a=>a.value===e.queues[t].dest);e.dest[a].total++,e.queues[t].called&&(e.current++,e.dest[a].current++)}}render(){const{queues:e,destPEls:t,total:a,current:s}=State.Queue,{st:i,nx:n,fn:d}=this.buttons;this.getList(),this.getDisplay(),this.constructDest(),s>0&&this.constructInfo(),-1===e.findIndex(e=>e.called)?(i.removeClass("is-hidden"),n.addClass("is-hidden"),d.addClass("is-hidden")):-1===e.findIndex(e=>!e.called||!e.finished)?(i.addClass("is-hidden"),n.addClass("is-hidden"),d.addClass("is-hidden")):s!==a||e[e.length-1].finished?(i.addClass("is-hidden"),n.removeClass("is-hidden"),d.addClass("is-hidden")):(i.addClass("is-hidden"),n.addClass("is-hidden"),d.removeClass("is-hidden"))}get(){let e=!1;const t=this.parseDate();return $.ajax({url:`${U}/service/get?d=${t}`,dataType:"json",async:!1,success:function(t){State.Queue.queues=t,e=!0}}),e}startQ(){this.call(0)&&this.init()}move(){console.log(State);const{current:e,total:t}=State.Queue;this.finishP(e-1)&&this.call(e)&&this.init()}call(e){const t=State.Queue.queues[e].service_id;let a=!1;return $.ajax({url:`${U}/service/call`,type:"post",dataType:"json",async:!1,data:{id:t},success:function(e){a=e}}),a}finishP(e){const t=State.Queue.queues[e].service_id;let a=!1;return $.ajax({url:`${U}/service/finish`,type:"post",dataType:"json",async:!1,data:{id:t},success:function(e){a=e}}),a}finishQ(){const{current:e,total:t}=State.Queue;this.finishP(t-1)&&this.init()}add(e,t){const a=new Date,s=State.patients.find(t=>parseInt(t.cid)===parseInt(e)),i=this.parseDate(a),n=a.getTime(),d=Oid,l={post_date:i,uid:s.patient_id,oid:d,dest:t,tstamp:n};this.submission.add(l)&&(this.init(),addQueue.reset())}delete(){const e=State.Queue.toDelete;this.submission.delete(e)&&($("#deleteQueueModal").modal("hide"),this.init())}parseDate(){const e=new Date($("#queueDate").val()),t=e.getDate()<10?"0"+e.getDate():e.getDate(),a=e.getMonth()<10?"0"+e.getMonth():e.getMonth();return`${e.getFullYear()}${a}${t}`}constructDest(){const{queues:e,destPEls:t,total:a,current:s}=State.Queue,i=[],n=State.Queue.dest;for(let e=0;e<n.length;e++)i.push(`${n[e].label}<br>${n[e].current}/${n[e].total}`);for(let e=0;e<t.length;e++)t[e].html(i[e])}constructInfo(e=State.Queue.current){const{queues:t}=State.Queue,a=t[e-1],{address:s,allergic:i,called:n,cid:d,dest:l,diagnose:o,finished:r,history:u,jknid:c,med_allergic:g,name:p,oid:h,patient_id:m,phone:v,post_date:f,rmid:y,service_id:D,tstamp:b,uid:j}=a,Q=`  <div class="col-6">\n          <ul class="list-unstyled">\n            <li><strong>Nomor antrian</strong>: ${e}</li>\n            <li><strong>Ruang</strong>: ${State.Queue.dest.find(e=>e.value===l).label}</li>\n            <li><strong>Nama</strong>: ${p}</li>\n            <li><strong>NIK</strong>: ${d}</li>\n            <li><strong>No RM</strong>: ${y}</li>\n            <li><strong>Alamat</strong>: ${s}</li>\n            <li><strong>Telepon</strong>: ${v} </li>\n          </ul>\n        </div>\n        <div class="col-6">\n          <ul class="list-unstyled">\n            <li><strong>Riwayat penyakit</strong>: ${u} </li>\n            <li><strong>Alergi</strong>: ${i}</li>\n            <li><strong>Diagnosa</strong>: ${o}</li>\n            <li><strong>Obat</strong>: ${g}</li>\n          </ul>\n        </div>`;$("#patientInfo").html(Q)}getList(){const e=State.Queue.queues;let t="";for(let a=0;a<e.length;a++)t+=`<li class="list-group-item">\n            <a class="queue-list-item${e[a].finished?" finished":""}" href="javascript:void(0)" data-id="${e[a].service_id}">\n              ${a+1}. ${e[a].name}\n            </a>\n            <a title="Hapus dari antrian" class="float-end delete-queue" href="javascript:void(0);" data-id="${e[a].service_id}">\n              <i class="fas fa-times"></i>\n            </a>\n          </li>`;$("#queueList").html(t)}playSound(){}getDisplay(){const{total:e,current:t}=State.Queue,a=`${t}/<small>${e}</small>`;$("#queueDisplay").html(a)}openDeleteForm(e){State.Queue.toDelete=e;const t=State.Queue.queues.find(t=>parseInt(t.service_id)===parseInt(e)).name;$("#qtdname").html(`<strong>${t}</strong>`),$("#deleteQueueModal").modal("show")}}const t=new e;t.init();class a{constructor(){this.submission={add:e=>{let t;return $.ajax({url:`${U}/patient/add`,type:"post",dataType:"json",async:!1,data:e,success:function(e){t=e}}),t},update:e=>{let t=!1;return $.ajax({url:`${U}/patient/update`,type:"post",dataType:"json",async:!1,data:e,success:function(e){t=e}}),t},delete:()=>{let e=!1;return $.ajax({url:`${U}/patient/delete`,type:"post",dataType:"json",async:!1,data:{id:State.toDelete.id},success:function(t){console.log(t),e=t}}),e},get:()=>{}},this.validation={}}add(){const e={name:$("#regName").val(),cid:$("#regCID").val(),rmid:$("#regRM").val(),jknid:$("#regJKN").val(),address:$("#regAddress").val(),phone:$("#regPhone").val(),history:$("#regDisHistory").val(),allergic:$("#regAllergic").val(),diagnose:$("#regDiag").val(),med:$("#regMed").val(),addToList:$("#addToList").is(":checked")||!1,regAddQueue:$("#regAddQueue").val()},{addToList:a,cid:s,regAddQueue:i}=e;this.submission.add(e)&&(addPatientForm.reset(),$("#patientList").DataTable().ajax.reload(),getPatients(),a&&t.add(s,i))}update(){const e={id:State.toUpdate.id,name:$("#editName").val(),cid:$("#editCID").val(),rmid:$("#editRM").val(),jknid:$("#editJKN").val(),address:$("#editAddress").val(),phone:$("#editPhone").val(),history:$("#editDisHistory").val(),allergic:$("#editAllergic").val(),diagnose:$("#editDiag").val(),med_allergic:$("#editMed").val()},{id:a,name:s,cid:i,rmid:n,jknid:d,address:l,phone:o,history:r,allergic:u,diagnose:c,med_allergic:g}=e;this.submission.update(e)&&(editPatientForm.reset(),$("#editPatientModal").modal("hide"),$("#patientList").DataTable().ajax.reload(),t.init())}delete(){this.submission.delete()&&($("#patientList").DataTable().ajax.reload(),$("#deletePatientModal").modal("hide"),t.init())}view(e){const t=State.patients.find(t=>parseInt(t.patient_id)===parseInt(e));console.log(t);const{address:a,allergic:s,cid:i,diagnose:n,history:d,jknid:l,med_allergic:o,name:r,patient_id:u,phone:c,rmid:g}=t;$("#viewPatientModalLabel").html(r);const p=`  <div class="row">\n          <div class="col-6">\n            <ul class="list-unstyled ps-2">\n              <li class="mb-3"><strong>Nama</strong>: ${r}</li>\n              <li class="mb-3"><strong>NIK</strong>: ${i}</li>\n              <li class="mb-3"><strong>No RM</strong>: ${g}</li>\n              <li class="mb-3"><strong>No JKN</strong>: ${l}</li>\n              <li class="mb-3"><strong>No Telepon</strong>: ${c}</li>\n              <li class="mb-3"><strong>Alamat</strong>: ${a} </li>\n            </ul>\n          </div>\n          <div class="col-6">\n            <ul class="list-unstyled ps-2">\n              <li class="mb-3"><strong>Riwayat Penyakit</strong>: <br> ${d} </li>\n              <li class="mb-3"><strong>Alergi</strong>: <br> ${s}</li>\n              <li class="mb-3"><strong>Diagnosa</strong>: <br> ${n}</li>\n              <li class="mb-3"><strong>Obat</strong>: <br> ${o}</li>\n            </ul>\n          </div>\n        </div>`;$("#viewPatientInfo").html(p),$("#viewPatientModal").modal("show")}openUpdateForm(e){State.toUpdate.id=e;const t=State.patients.find(t=>parseInt(t.patient_id)===parseInt(e)),{address:a,allergic:s,cid:i,diagnose:n,history:d,jknid:l,med_allergic:o,name:r,phone:u,rmid:c}=t;$("#editName").val(r),$("#editCID").val(i),$("#editRM").val(c),$("#editJKN").val(l),$("#editAddress").val(a),$("#editPhone").val(u),$("#editDisHistory").val(d),$("#editAllergic").val(s),$("#editDiag").val(n),$("#editMed").val(o),$("#editPatientModal").modal("show")}openDeleteForm(e){}}const s=new a;$("#addPatientForm").on("submit",function(e){e.preventDefault(),s.add()}),$("#addQueue").on("submit",function(e){e.preventDefault();const a=$("#queueID").val(),s=$("#queueDest").val();a&&s&&t.add(a,s)}),$(".start-queue").on("click",function(){t.startQ()}),$(".next-queue").on("click",function(){t.move()}),$(".finish-queue").on("click",function(){t.finishQ()}),$("#patientList").on("click",".patientEdit",function(){const e=$(this).data("id");s.openUpdateForm(e)}),$("#editPatientForm").on("submit",function(e){e.preventDefault(),s.update()}),$("#patientList").on("click",".patientDelete",function(){$("#deletePatientModal").modal("show");const e=$(this).data("id");State.toDelete.id=e}),$("#deletePatientForm").on("submit",function(e){e.preventDefault(),s.delete()}),$("#patientList").on("click",".patientView",function(){const e=$(this).data("id");s.view(e)}),$("#queueDate").on("change",function(){}),$("#addToList").on("change",function(){$(this).is(":checked")?$("#regAddQueueC").fadeIn("slow"):$("#regAddQueueC").fadeOut("slow")}),$("#queueList").on("click",".delete-queue",function(e){const a=$(this).data("id");t.openDeleteForm(a)}),$("#deleteQueueForm").on("submit",function(e){e.preventDefault(),t.delete()}),$("#queueList").on("click",".queue-list-item",function(e){const a=$(this).data("id"),s=State.Queue.queues.findIndex(e=>parseInt(e.service_id)===parseInt(a));t.constructInfo(s+1)}),$("#destFilterSelect").on("change",function(){$(this).val()}),$("#patientList").DataTable({responsive:!0,ajax:{url:`${U}/patient/get`,dataSrc:""},columns:[{data:"patient_id"},{data:"name"},{data:"cid"},{data:"rmid"},{data:"jknid"},{data:"address"},{data:"phone"},{data:"patient_id",render:(e,t,a)=>{return`<a href="javascript:void(0);" class="patientEdit" data-id="${e}"><i class="fas fa-pencil-alt"></i></a>\n            <a href="javascript:void(0);" class="patientDelete" data-id="${e}"><i class="fas fa-trash"></i></a>\n            <a href="javascript:void(0);" class="patientView" data-id="${e}"><i class="fas fa-eye"></i></a>`}}]})});